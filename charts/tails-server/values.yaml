# Default values for tails-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/bcgov/tails-server
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# Runtime server settings
server:
  # Tails server must bind to 0.0.0.0 in containers
  host: 0.0.0.0
  # Optional override of port; defaults to service.port when empty
  port: ""
  # Log level passed to the application
  logLevel: WARNING

# Additional args/env
extraArgs: []
extraEnv: []
extraEnvFrom: []

# Persistence for tails storage
persistence:
  enabled: false
  # If set, use an existing PVC and ignore size/accessModes/storageClass
  existingClaim: ""
  size: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClass: ""
  mountPath: /data

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# Security context (disabled by default). Example hardened settings:
# securityContext:
#   runAsNonRoot: true
#   allowPrivilegeEscalation: false
#   readOnlyRootFilesystem: true
#   capabilities:
#     drop:
#       - ALL
securityContext: {}

# Probes (defaults suitable for quick startup; override as needed)
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3

readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 2
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 6

startupProbe:
  tcpSocket:
    port: http
  # Benefit: prevents restarts during cold-start or slow PVC attach; only after this succeeds do liveness checks apply
  initialDelaySeconds: 0
  periodSeconds: 2
  timeoutSeconds: 1
  failureThreshold: 30

# Deployment strategy and history
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1
revisionHistoryLimit: 3

# Optional PodDisruptionBudget (recommended when replicas > 1)
pdb:
  enabled: false
  minAvailable: 1

# Scheduling
priorityClassName: ""
# Basic topology spread across nodes (soft). Requires Kubernetes >=1.19
# Set to [] to disable.
topologySpreadConstraints: []
# - maxSkew: 1
#   topologyKey: kubernetes.io/hostname
#   whenUnsatisfiable: ScheduleAnyway
#   labelSelector:
#     matchLabels:
#       app.kubernetes.io/name: tails-server

# Scheduling overrides (cluster-specific)
nodeSelector: {}

affinity: {}

tolerations: []

# Service settings
service:
  type: ClusterIP
  port: 6543
  nodePort: null
  annotations: {}

# OpenShift RWX example (commented)
# persistence:
#   enabled: true
#   size: 10Gi
#   accessModes:
#     - ReadWriteMany
#   storageClass: netapp-file-standard
#   mountPath: /data

networkPolicy:
  enabled: true
  # Optional label selectors to restrict allowed sources
  namespaceSelector: {}
  ## Example:
  # network.openshift.io/policy-group: ingress
  podSelector: {}

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
